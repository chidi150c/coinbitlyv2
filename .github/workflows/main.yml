name: Go Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Build Go Application and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.20.0

      - name: Build Go Application
        run: go build -o my-golang-server .

# Now the app has been built inside the runner container

      - name: Remove Old Deployment in DigitalOcean 
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          key_type: rsa
          script: |
            set -e
            cd /tmp/my-app
            echo "Current directory: $(pwd)"
            ls -la
            rm -rf * 
      
      - name: Copy Application Files to Target System
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: './my-golang-server ./webClient/ ./Dockerfile'
          target: /tmp/my-app/

      - name: Build Docker Image
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          key_type: rsa
          script: |
            cd /tmp/my-app

            # Build and run Docker image with encapsulated environment
            docker build -t my-golang-app .
            docker run -d -p 35259:35259 --name my-golang-app my-golang-app
